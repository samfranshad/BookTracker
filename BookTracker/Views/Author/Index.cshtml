@model IEnumerable<Author>
@{
    ViewData["Title"] = "Authors";
}
<p class="title"><span class="fancy">Authors</span></p>



<form class="searchForm" asp-controller="Author" asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name or work: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div class="button">
    <form action="/Author/InsertAuthor/">
        <input type="submit" value="Add a new author" />
    </form>
</div>

<table class="table">
    <tr>
        <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["AuthorIDSortParm"]">ID</a></th>
        <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["AuthorNameSortParm"]">Author Name</a></th>
        <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["BornDiedSortParm"]">Born - Died</a></th>
        <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["InLibrarySortParm"]">In Library</a></th>
    </tr>

    @foreach (var author in @Model)
    {
        <tr>
            <td><a href=/Author/ViewAuthor/@author.AuthorID>@author.AuthorID</a></td>
            <td>@author.AuthorName</td>
            <td>@author.BornDied</td>
            <td>@author.InLibrary</td>
        </tr>
    } 

</table>