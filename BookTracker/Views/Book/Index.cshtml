@model IEnumerable<Book>
@{
    ViewData["Title"] = "Books";
}

<p class="title"><span class="fancy">Books</span></p>


<form class="searchForm" asp-controller="Book" asp-action="Index" method="get">
    <div class="searchText form-actions no-color">
        <p>
            Find by name or author: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div class="button">
    <form action="/Book/InsertBook/">
        <input type="submit" value="Add a new book" />
    </form>
</div>

<table class="table">
    <tr>
            <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]">ID</a></th>
            <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">Title</a></th>
            <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]">Author</a></th>
            <th> <a class="tableHeader" asp-action="Index" asp-route-sortOrder="@ViewData["CompletedSortParm"]">Completed</a></th>
    </tr>

    @foreach (var book in @Model)
    {
        <tr>
            <td class="bookID"><a href=/Book/ViewBook/@book.ID>@book.ID</a></td>
            <td>@book.Title</td>
            <td>@book.Author</td>
            <td>@book.Completed</td>
        </tr>
    }

</table>